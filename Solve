class Solution {
public:
    int trap(vector<int>& height) {
        
        vector <int> maxst;
        vector <int> maxdr;
        maxst.resize(height.size());
        maxdr.resize(height.size());
        for (int i = 0;i<=height.size()-1;i++)
        {
            if (i > 0)
            {
                maxst[i] = max(maxst[i - 1],height[i-1]);
            }
            else {
                maxst[i] = 0;
            }
        }

        for (int i = height.size() - 1; i >= 0; i--)
        {
            if (i < height.size() - 1)
            {
                maxdr[i] = max(maxdr[i + 1], height[i + 1]);
            }
            else {
                maxdr[i] = 0;
            }
        }
        int cnt = 0;

        for (int i = 0; i <= height.size() - 1; i++)
        {
            if (height[i] < min(maxdr[i], maxst[i]))
            {
                cnt += min(maxdr[i], maxst[i]) - height[i];
            }
        }

        return cnt;
    }
};
